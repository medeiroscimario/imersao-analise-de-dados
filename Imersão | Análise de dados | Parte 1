{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyOAwcEq63ycBuAwxBGoDWoB",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/medeiroscimario/imersao-analise-de-dados/blob/main/Imers%C3%A3o%20%7C%20An%C3%A1lise%20de%20dados%20%7C%20Parte%201\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Python\n",
        "Introdução, operadores matemáticos, condicionais, estruturas de dados, loop, funções"
      ],
      "metadata": {
        "id": "xagT1FeplCV1"
      }
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "KgSz3a2Ck15O",
        "outputId": "b0d5e92e-5dc7-4bb5-dfa9-9d9ecffce9e5"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Olá mundo!\n"
          ]
        }
      ],
      "source": [
        "print(\"Olá mundo!\")"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Operações matemáticas"
      ],
      "metadata": {
        "id": "Fne8ikKVnEjQ"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Soma\n",
        "10 + 5"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "LRCgMnIDlbzM",
        "outputId": "06313c44-4a59-4596-e5aa-711759962df7"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "15"
            ]
          },
          "metadata": {},
          "execution_count": 3
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Subtração\n",
        "10 - 5"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "g3-sG5epnPmS",
        "outputId": "82f276a3-96ce-4626-fa5b-bfaa5a6eed1b"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "5"
            ]
          },
          "metadata": {},
          "execution_count": 4
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Multiplicação\n",
        "2 * 5"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "wMP660y6nVgK",
        "outputId": "0431eab7-ea83-4c0d-eed4-1c9536b5a8c7"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "10"
            ]
          },
          "metadata": {},
          "execution_count": 5
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Potenciação\n",
        "5 ** 2"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "AYi26VVInZ0e",
        "outputId": "c60b65d9-4823-4aad-d9cc-5e8669213ee0"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "25"
            ]
          },
          "metadata": {},
          "execution_count": 6
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Divisão\n",
        "10 / 2"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "qJAa8irrnhmZ",
        "outputId": "3dbfc8b8-77b3-454e-b740-c2a32cf6e381"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "5.0"
            ]
          },
          "metadata": {},
          "execution_count": 7
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Divisão inteira\n",
        "10 // 3"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Yfvb9rTKnqTM",
        "outputId": "a7c6ed73-04cd-4e0a-cc70-91b7b391dc24"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "3"
            ]
          },
          "metadata": {},
          "execution_count": 8
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Resto da divisão\n",
        "10 % 3"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "fv92tKMCnv9c",
        "outputId": "b4d690f8-309d-4ce9-d085-7ccc358bfe91"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "1"
            ]
          },
          "metadata": {},
          "execution_count": 9
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Variáveis"
      ],
      "metadata": {
        "id": "3UUnOf8qoKg-"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Atribuição\n",
        "a = 4\n",
        "b = 6"
      ],
      "metadata": {
        "id": "o7r_lh8FoMq_"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Igualdade\n",
        "a == 4"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "cjOc2ZG3olIr",
        "outputId": "4d7dfe57-1896-4427-ee13-b5130115888f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "True"
            ]
          },
          "metadata": {},
          "execution_count": 11
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Diferença\n",
        "a != b"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "SkWIr4MboweN",
        "outputId": "11acaf0e-c675-42bb-bd06-8acb5bf97397"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "True"
            ]
          },
          "metadata": {},
          "execution_count": 12
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "idade = 32\n",
        "nome = \"Fernanda\""
      ],
      "metadata": {
        "id": "CXHHpq1Ho4IU"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(idade)\n",
        "print(nome)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "8duwRDarpQoT",
        "outputId": "c83dfe3b-67a7-476c-acff-9da87512b86d"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "32\n",
            "Fernanda\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(\"A idade é\", idade)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "vkdT802Jpqbs",
        "outputId": "768f929d-4b3e-4d6d-9536-4affdfe31ce5"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "A idade é 32\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(f\"O nome é {nome} e a idade é {idade}\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "jnhY2kWnpxGy",
        "outputId": "b7b77afc-c6b1-445b-f328-4fc4a214217c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "O nome é Fernanda e a idade é 32\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "type(idade)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "zjqDosC4qNQ7",
        "outputId": "fe7db7fd-c1a0-40c8-90b8-a8796158a484"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "int"
            ]
          },
          "metadata": {},
          "execution_count": 17
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "String"
      ],
      "metadata": {
        "id": "Ld9nCQ-sqXzF"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "texto = \"Estou aprendendo Python para análise de dados\""
      ],
      "metadata": {
        "id": "u-dVjabtqmW5"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Indexação sempre começa pelo 0\n",
        "texto[0]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "id": "zWoop0kVrjp6",
        "outputId": "6de0e0a0-df56-4c80-8023-c5a2c23213a6"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "'E'"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "string"
            }
          },
          "metadata": {},
          "execution_count": 19
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Inclusivo a esquerda, exclusivo a direito\n",
        "texto[0:23]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "id": "2k2Am9OOr_3X",
        "outputId": "79a8064e-fd4a-493f-f159-a706258f56d7"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "'Estou aprendendo Python'"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "string"
            }
          },
          "metadata": {},
          "execution_count": 20
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Deixando o texto em maiúsculo\n",
        "texto.upper()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "id": "Idyv9r-gsZ2J",
        "outputId": "3990044f-0155-41db-d7bd-63fdf2653fee"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "'ESTOU APRENDENDO PYTHON PARA ANÁLISE DE DADOS'"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "string"
            }
          },
          "metadata": {},
          "execution_count": 22
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Deixando o texto em minúsculo\n",
        "texto.lower()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "id": "gXRo5WrCstjd",
        "outputId": "a04a9d29-695a-4827-bd7d-8b329867828e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "'estou aprendendo python para análise de dados'"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "string"
            }
          },
          "metadata": {},
          "execution_count": 23
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Deixando a primeira letra maiúscula\n",
        "texto.capitalize()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "id": "wRB16wGOs0oP",
        "outputId": "9f9ae3ff-4b9a-4e4a-8646-950664cb362f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "'Estou aprendendo python para análise de dados'"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "string"
            }
          },
          "metadata": {},
          "execution_count": 24
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Deixando as primeiras letras em maiúsculo\n",
        "texto.title()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "id": "Va-wR111uPof",
        "outputId": "1a7aa100-5a50-4894-f3e8-219f151a77c3"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "'Estou Aprendendo Python Para Análise De Dados'"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "string"
            }
          },
          "metadata": {},
          "execution_count": 25
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Alterando elementos do texto\n",
        "frase = texto.replace(\"análise\", \"Ciência\")\n",
        "print(frase)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "tbXOX1jwuhSG",
        "outputId": "28a2094e-38b9-4312-e16b-cff8625b7a70"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Estou aprendendo Python para Ciência de dados\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Saber se um elemento está na minha frase\n",
        "\"Python\" in frase"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "hFNhX_q4v5yb",
        "outputId": "4957f4ba-e1e4-4e68-a835-c22ef7e45116"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "True"
            ]
          },
          "metadata": {},
          "execution_count": 28
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# A quantidade de vezes que a palavra aparece no texto\n",
        "frase.count(\"Python\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "lu98D5xgwEVr",
        "outputId": "9ed0fb5a-2449-4467-bb90-176007f6f2fa"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "1"
            ]
          },
          "metadata": {},
          "execution_count": 29
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Estruturas de dados"
      ],
      "metadata": {
        "id": "TJ1BWLb7xJcW"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Listas"
      ],
      "metadata": {
        "id": "YJ9R22suxMmz"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "animais = [1,2,3]\n",
        "animais"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "pKzuhmKwxbAe",
        "outputId": "01455024-85f4-4b7c-cc6f-6865554692b2"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[1, 2, 3]"
            ]
          },
          "metadata": {},
          "execution_count": 31
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "type(animais)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "pa_1E3Kyxm6e",
        "outputId": "f265f3a6-b2a8-4633-d325-af3a114799d3"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "list"
            ]
          },
          "metadata": {},
          "execution_count": 32
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# A diferença entre lista e tupla, é porque a primeira é multável"
      ],
      "metadata": {
        "id": "mPiLnl6ixrAN"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "animais[0] = \"Gato\"\n",
        "animais"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ANs6LfA8xvVC",
        "outputId": "138fa98b-9003-4327-f0de-30cb43989a54"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "['Gato', 2, 3]"
            ]
          },
          "metadata": {},
          "execution_count": 35
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "animais = [\"Gato\", \"Cachorro\", 1,2,3]\n",
        "animais"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "0m6SwusZ0ZAd",
        "outputId": "b5c3c073-ca59-43d8-b5db-b4d4a9ee5d0c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "['Gato', 'Cachorro', 1, 2, 3]"
            ]
          },
          "metadata": {},
          "execution_count": 36
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "animais[0]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "id": "3RWFn9C71IDM",
        "outputId": "1602a139-6764-45e3-9003-1d29ff2a769b"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "'Gato'"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "string"
            }
          },
          "metadata": {},
          "execution_count": 37
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Retornando o último elemento de uma lista\n",
        "animais[-1]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "9IFT9TGq1LGA",
        "outputId": "b30e1ad1-8287-45a1-e3fa-af3c60ab0249"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "3"
            ]
          },
          "metadata": {},
          "execution_count": 40
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Removendo um elemento da lista\n",
        "animais.remove(\"Cachorro\")"
      ],
      "metadata": {
        "id": "kZjVOVnW3Ne0"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "animais"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "wfpdrZxl3zEi",
        "outputId": "dff26645-a25a-4e70-d45a-02f6c8a2cb58"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "['Gato', 1, 2, 3]"
            ]
          },
          "metadata": {},
          "execution_count": 44
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Removendo um elemento da lista pelo índice\n",
        "animais.pop(0)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "id": "7wqq2GNg4Ppy",
        "outputId": "d1d58bdd-93be-43c2-fe8a-02e8a8379eb0"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "'Gato'"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "string"
            }
          },
          "metadata": {},
          "execution_count": 46
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "animais"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "AYLTMshg4alA",
        "outputId": "b8484bb4-5fd0-4588-afde-7e0617fc85cd"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[1, 2, 3]"
            ]
          },
          "metadata": {},
          "execution_count": 47
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Identificando se determinado elemento está na lista\n",
        "\"Gato\" in animais"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "jhY-XX8i5A45",
        "outputId": "5f56fd45-d917-48b7-e867-344ffbdd8c5b"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "False"
            ]
          },
          "metadata": {},
          "execution_count": 48
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Adicionando um elemento na lista\n",
        "animais.append(\"Cachorro\")"
      ],
      "metadata": {
        "id": "yD95lTwR5IJQ"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "animais"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "6QUO5jq55Sio",
        "outputId": "d1d3c2f2-cbb4-45d3-c55d-89e43ecc92ed"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[1, 2, 3, 'Cachorro']"
            ]
          },
          "metadata": {},
          "execution_count": 50
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# O append só recebe um argumento"
      ],
      "metadata": {
        "id": "j4sVYvu55VTI"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Adicionando mais de um elemento na lista\n",
        "animais.extend([\"Gato\", \"Papagaio\"])\n",
        "animais"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "7zBbx80V57s-",
        "outputId": "c7017c86-d157-4b36-e56f-ca4d989b173d"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[1, 2, 3, 'Cachorro', 'Gato', 'Papagaio']"
            ]
          },
          "metadata": {},
          "execution_count": 52
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Adicionando um elemento em um lugar específico da minha lista\n",
        "animais.insert(1, \"Peixe\")"
      ],
      "metadata": {
        "id": "iq-vmhpq6WiS"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "animais"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "qsOK80mm6gnn",
        "outputId": "bd95cc88-7060-4881-a35a-cebe765f6543"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[1, 'Peixe', 2, 3, 'Cachorro', 'Gato', 'Papagaio']"
            ]
          },
          "metadata": {},
          "execution_count": 54
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "lista = [10,5,30,500,100]"
      ],
      "metadata": {
        "id": "bxMYOLsX66oA"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Ordenação\n",
        "lista.sort()\n",
        "lista"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "4OdSSLOi7CJg",
        "outputId": "2ecb5b38-7d48-4cad-8021-cd8e2ae779b5"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[5, 10, 30, 100, 500]"
            ]
          },
          "metadata": {},
          "execution_count": 57
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Ordenação - decrescente\n",
        "lista.sort(reverse=True)\n",
        "lista"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "z_cuwClp7XtP",
        "outputId": "3c24bba4-dd79-4ee7-ef8b-14573bacaeeb"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[500, 100, 30, 10, 5]"
            ]
          },
          "metadata": {},
          "execution_count": 59
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Maior número da minha lista\n",
        "max(lista)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "IggNkZ-d7je5",
        "outputId": "071f32ef-2535-4f09-b5a0-89ed5e1b3369"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "500"
            ]
          },
          "metadata": {},
          "execution_count": 60
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Menor número da minha lista\n",
        "min(lista)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "6LhQm4xW7o8q",
        "outputId": "2dc21756-c196-4e12-a76e-7ee8f4cb2e3e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "5"
            ]
          },
          "metadata": {},
          "execution_count": 61
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Lista de lista\n",
        "lista = ([\"Gato\", \"Cachorro\", \"Peixe\"], [\"Audi\", \"Ferrari\", \"Fusca\"], [1,2,3])"
      ],
      "metadata": {
        "id": "SwUy1DC18WvK"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "lista[0][1]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "id": "MrXGktHO8m-u",
        "outputId": "63763e00-d216-4acc-a9bf-ef38e719d567"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "'Cachorro'"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "string"
            }
          },
          "metadata": {},
          "execution_count": 63
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Quantidade de elementos que tem numa lista\n",
        "len(lista)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "OIWIVzcY8uyD",
        "outputId": "a15cd47f-4b6c-416b-eb68-62f81f61ada0"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "3"
            ]
          },
          "metadata": {},
          "execution_count": 65
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Tuplas"
      ],
      "metadata": {
        "id": "O7nAgJg0879j"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# As tuplas suam parênteses como sintaxe\n",
        "tp = (\"Banana\", \"Maçã\", \"Uva\", 1,2,3)\n",
        "tp"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "fypc-GQ09SgU",
        "outputId": "8204d9c2-0380-442d-b2cd-230f4ee69287"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "('Banana', 'Maçã', 'Uva', 1, 2, 3)"
            ]
          },
          "metadata": {},
          "execution_count": 67
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "tp[0] = \"Morango\""
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 141
        },
        "id": "CtOg48i3-Cug",
        "outputId": "3a8347b1-0b8e-43e5-9f21-049bf77c251b"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "error",
          "ename": "TypeError",
          "evalue": "'tuple' object does not support item assignment",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-68-c7eb7a51cd5e>\u001b[0m in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mtp\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m\"Morango\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
            "\u001b[0;31mTypeError\u001b[0m: 'tuple' object does not support item assignment"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Dicionários"
      ],
      "metadata": {
        "id": "6gBjNYqk-IC2"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Dicionários trabalham com o conceito de chave:valor"
      ],
      "metadata": {
        "id": "bi09TI_2-g5R"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "dc = {\"Maçã\":10, \"Banana\":15, \"Laranja\":5}\n",
        "dc"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "iXrOggUQ_M2-",
        "outputId": "6d9c4d6d-bb7c-4c75-ae54-02ebe14dccaf"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "{'Maçã': 10, 'Banana': 15, 'Laranja': 5}"
            ]
          },
          "metadata": {},
          "execution_count": 69
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Não acessamos elementos em dicionário como na lista"
      ],
      "metadata": {
        "id": "wpygLvj7_pVF"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Acessando as chaves\n",
        "dc.keys()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Ah8DWUSO_url",
        "outputId": "fc29cbfa-32a6-402a-a63b-ca2035acdf19"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "dict_keys(['Maçã', 'Banana', 'Laranja'])"
            ]
          },
          "metadata": {},
          "execution_count": 70
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Acessando os valores\n",
        "dc.values()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "HeUQSC4T_zQE",
        "outputId": "96d5a458-8dd0-4f04-cffa-23fbdd35f0b0"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "dict_values([10, 15, 5])"
            ]
          },
          "metadata": {},
          "execution_count": 71
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Consultando um elemento no meu dicionário, e caso, não tenha, passando um parâmetro para mostrar na tela\n",
        "dc.get(\"Banana\", \"não existe\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "x9jWVCUT_6Tq",
        "outputId": "4d39f122-3e42-415b-8d6b-0789eef55285"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "15"
            ]
          },
          "metadata": {},
          "execution_count": 72
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "dc.get(\"Uva\", \"não existe\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "id": "Ff8KI58xBcqS",
        "outputId": "f99963a0-c80e-4f77-d860-fac7eccd05d0"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "'não existe'"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "string"
            }
          },
          "metadata": {},
          "execution_count": 73
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "dc.get(\"Uva\")"
      ],
      "metadata": {
        "id": "xmEV0HtEBhn1"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Vai procurar no meu dicionário a existência do elemento, se não tiver, irá adicionar a chave e retornar o valor\n",
        "dc.setdefault(\"Uva\", 12)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "DVRBEvZmBsqm",
        "outputId": "6a80c54b-7103-4369-b10e-d92061b90bc8"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "12"
            ]
          },
          "metadata": {},
          "execution_count": 75
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "dc"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "aZJmxzX3B5I2",
        "outputId": "f6ec595a-8c6e-4018-c747-d415ae7fe85f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "{'Maçã': 10, 'Banana': 15, 'Laranja': 5, 'Uva': 12}"
            ]
          },
          "metadata": {},
          "execution_count": 76
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Caso se faça um \"setdefault\" em um dicionário, onde já existe o elemento na lista, ele retornará o valor da chave originária\n",
        "dc.setdefault(Banana:12)"
      ],
      "metadata": {
        "id": "c9bZya63B67l"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Estruturas condicionais"
      ],
      "metadata": {
        "id": "E_D28czpCYFy"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Estrutura do if\n",
        "idade = 20\n",
        "if idade == 18:\n",
        "  print(\"Você é maior de idade\")"
      ],
      "metadata": {
        "id": "UwP6qcUCCbUo"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Estrututa do else\n",
        "if idade == 18:\n",
        "  print(\"Você tem dezoito anos\")\n",
        "else:\n",
        "  print(\"Você não tem dezoito anos\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "S9LrG51tDMYu",
        "outputId": "d2b18d90-bdd0-42d1-ad9b-a8335d91f2b8"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Você não tem dezoito anos\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Estrutura do elif\n",
        "idade = 65\n",
        "if idade < 18:\n",
        "  print(\"Você é menor de idade\")\n",
        "elif idade >= 18 and idade < 65:\n",
        "  print(\"Você é adulto\")\n",
        "else:\n",
        "  print(\"Você é idoso\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Ua0VDx4gDUlO",
        "outputId": "77c27af9-8191-42dc-a18c-fc217219a4eb"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Você é idoso\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Qualquer uma das condições sendo verdadeira\n",
        "nome = \"Cimário\"\n",
        "if 10 > 20 or nome == \"Cimário\":\n",
        "  print(\"Olá, Cimário\")\n",
        "else:\n",
        "  print(\"Você não é Cimário\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "5K3KjsS_F5Je",
        "outputId": "41cc13fa-99ff-4b68-fde4-2e5842a4d5a6"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Olá, Cimário\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# As duas condições tem que ser verdadeira\n",
        "nome = \"Cimário\"\n",
        "if 10 > 20 and nome == \"Cimário\":\n",
        "  print(\"Olá, Cimário\")\n",
        "else:\n",
        "  print(\"Você não é Cimário\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "B0wI3FJLGbid",
        "outputId": "85b192a5-f4fc-4de9-d2d3-de1d27051b0f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Você não é Cimário\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Loop"
      ],
      "metadata": {
        "id": "sHF-RLbIes_6"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Loop for\n",
        "# Percorre a lista, e imprime cada elemento, bem como, pode fazer alguma ação\n",
        "for i in [\"Audi\", \"Ferrari\", \"Fusca\"]:\n",
        "  print(i)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "7-bWYkj-euZi",
        "outputId": "f1becbb4-29b8-40ca-bf65-3495586a771a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Audi\n",
            "Ferrari\n",
            "Fusca\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "for i in [1,2,3,4,5]:\n",
        "  print(\"Valor\", i)\n",
        "  print(i+2)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "T_kphOFSgfOn",
        "outputId": "2ade6597-d68f-4c71-e77e-994579b241b7"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Valor 1\n",
            "3\n",
            "Valor 2\n",
            "4\n",
            "Valor 3\n",
            "5\n",
            "Valor 4\n",
            "6\n",
            "Valor 5\n",
            "7\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "for i in [1,2,3,4,5,6,7,8,9,10]:\n",
        "  if i % 2 == 0:\n",
        "    print(i)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "5fEpWAFMhPBG",
        "outputId": "7caa5cf3-a577-43c3-d10c-e4f7de91c52f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "2\n",
            "4\n",
            "6\n",
            "8\n",
            "10\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "for caractere in \"Analisando dados com Python\":\n",
        "  print(caractere)"
      ],
      "metadata": {
        "id": "jeivyyDtincT"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Interromper o loop\n",
        "for letra in \"Python\":\n",
        "  if letra == \"o\":\n",
        "    break\n",
        "  print(letra)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "oe_FQ0V4i3tm",
        "outputId": "1b32bac8-12ee-43a5-ce6f-57285b445515"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "P\n",
            "y\n",
            "t\n",
            "h\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Pulando determinada condição no loop\n",
        "for letra in \"Python\":\n",
        "  if letra == \"y\":\n",
        "    continue\n",
        "  print(letra)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "CmKsoewLjj_r",
        "outputId": "129952ca-a510-4090-e4ca-48fabdb66e6d"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "P\n",
            "t\n",
            "h\n",
            "o\n",
            "n\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Funções"
      ],
      "metadata": {
        "id": "w2wSBHN1lfln"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Criando funções\n",
        "def saudacao():\n",
        "  print(\"Olá, seja bem vindo\")"
      ],
      "metadata": {
        "id": "BIvFnqlaljWK"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "saudacao()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "fs05rA_cl9i2",
        "outputId": "d835924e-3059-4d2a-9269-f2dc4e193d4b"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Olá, seja bem vindo\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Funções com argumento\n",
        "def hello(nome):\n",
        "  print(\"Olá\", nome)"
      ],
      "metadata": {
        "id": "kXDnRdzmmAgV"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "hello(\"Cimário\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "rBb5oz17mNf0",
        "outputId": "b43c49b0-633f-4a9c-e472-81d2274af579"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Olá Cimário\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "def soma(a,b):\n",
        "  return(f\"A soma dos dois números é: {a + b}\")"
      ],
      "metadata": {
        "id": "L4ZxITQzmdks"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "soma(1,5)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "id": "RVVl__tSm48G",
        "outputId": "b19b667b-daa8-4be9-b8df-1bbc9df7c365"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "'A soma dos dois números é: 6'"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "string"
            }
          },
          "metadata": {},
          "execution_count": 17
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "def imc(peso,altura):\n",
        "  return(f\"O IMC do paciente é {peso/altura**2}\")"
      ],
      "metadata": {
        "id": "siLGOOp2nx9N"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "imc(99,1.86)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "id": "VTw_EUUxohir",
        "outputId": "49e4c9b2-669f-4e1a-83b5-a90c3a6806dc"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "'O IMC do paciente é 28.61602497398543'"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "string"
            }
          },
          "metadata": {},
          "execution_count": 33
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Input\n",
        "def imc():\n",
        "  peso = float(input(\"Qual é o seu peso ?\"))\n",
        "  altura = float(input(\"Qual é a sua altura ?\"))\n",
        "  imc = round(peso/altura**2,2)\n",
        "  return imc"
      ],
      "metadata": {
        "id": "9q_N2oSNqoTb"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "imc()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "7Yjwt-WJrE8c",
        "outputId": "d98765ab-182f-4813-a626-a6f0761ab17b"
      },
      "execution_count": null,
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Qual é o seu peso ?99\n",
            "Qual é a sua altura ?1.86\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "28.62"
            ]
          },
          "metadata": {},
          "execution_count": 35
        }
      ]
    }
  ]
}